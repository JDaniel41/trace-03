{"version":3,"sources":["components/BlinkBox.js","components/BoxGrid.js","components/StartScreen.js","components/GameScreen.js","App.js","index.js"],"names":["BlinkBox","canBeClicked","initialState","useState","lightOn","setLightState","bgColor","useEffect","className","onClick","BoxGrid","boxesAreClickable","initialStates","map","index","StartScreen","onButtonClick","GameScreen","showBoard","setShowBoard","currentPatternIdx","setCurrentPatternIdx","currentPattern","getGridStatesForSpace","currentBoardState","setCurrentBoardState","currentSpace","Array","fill","a","currentIdx","executeNextButtonClick","console","log","switchToGameBoard","showGameBoard","App","ReactDOM","render","document","getElementById"],"mappings":"gLA6BeA,MA3Bf,YAAmD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC9B,EAAiCC,mBAASD,GAA1C,mBAAOE,EAAP,KAAgBC,EAAhB,KAEIC,EAAUF,EAAU,WAAa,aAYrC,OAJAG,qBAAU,WACND,EAAUF,EAAU,WAAa,gBAIjC,oBACII,UACIF,EAAU,uDAEdG,QAfR,WACQR,GACAI,GAAeD,IASnB,mBCGOM,MAlBf,YAAwD,IAArCC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,cAWlC,OACI,oBAAIJ,UAAU,mDAAd,SACKI,EAAcC,KAZvB,SAAwBX,EAAcY,GAClC,OACI,cAAC,EAAD,CAEIb,aAAcU,EAAkBG,GAChCZ,aAAcA,GAFTY,SCENC,MATf,YAAyC,IAAlBC,EAAiB,EAAjBA,cACnB,OACI,gCACI,6DACA,wBAAQP,QAASO,EAAjB,uBCyDGC,MAzDf,WACI,MAAgCd,oBAAS,GAAzC,mBAAKe,EAAL,KAAgBC,EAAhB,KACA,EAA0ChB,oBAAS,GAAnD,mBACA,GADA,UACgDA,mBAAS,IAAzD,mBAAKiB,EAAL,KAAwBC,EAAxB,KACA,EAA0ClB,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAnE,mBAAKmB,EAAL,KACA,GADA,KACgDnB,mBAC5CoB,EAAsBD,EAAe,MADzC,mBAAKE,EAAL,KAAwBC,EAAxB,KAIA,SAASF,EAAsBG,GAM3B,OALaC,MAAM,GACdC,KAAK,GACLf,KAAI,SAACgB,EAAGC,GACL,OAAOA,IAAeJ,KAKlC,SAASK,IACmBJ,MAAM,GAAGC,MAAK,GACtCH,EACIF,EAAsBD,EAAeF,KAEzCY,QAAQC,IAAIT,GAEZH,EAAqBD,EAAoB,GAiB7C,SAASc,IACLf,GAAa,GAOjB,OACI,qBAAKX,UAAU,OAAf,SACKU,EAxBT,WACI,IAAIP,EAAoBgB,MAAM,GAAGC,MAAK,GAEtC,OACI,gCACI,cAAC,EAAD,CACIjB,kBAAmBA,EACnBC,cAAeY,IAEnB,wBAAQf,QAASsB,EAAjB,8BAeSI,GALV,cAAC,EAAD,CAAanB,cAAekB,OC5C5BE,MAJf,WACI,OAAO,cAAC,EAAD,K,MCCXC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.78e57033.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction BlinkBox({ canBeClicked, initialState }) {\n    const [lightOn, setLightState] = useState(initialState);\n\n    let bgColor = lightOn ? \"bg-white\" : \"bg-red-600\";\n\n    function updateColor() {\n        if (canBeClicked) {\n            setLightState(!lightOn);\n        }\n    }\n\n    useEffect(() => {\n        bgColor = lightOn ? \"bg-white\" : \"bg-red-600\";\n    });\n\n    return (\n        <li\n            className={\n                bgColor + \" border-4 border-black border-opacity-100 rounded-md\"\n            }\n            onClick={updateColor}\n        >\n            &nbsp;\n        </li>\n    );\n}\n\nexport default BlinkBox;\n","import { useState } from \"react\";\nimport BlinkBox from \"./BlinkBox\";\n\nfunction BoxGrid({ boxesAreClickable, initialStates }) {\n    function renderBlinkBox(initialState, index) {\n        return (\n            <BlinkBox\n                key={index}\n                canBeClicked={boxesAreClickable[index]}\n                initialState={initialState}\n            />\n        );\n    }\n\n    return (\n        <ul className=\"grid grid-cols-3 justify-between gap-1 h-96 w-96\">\n            {initialStates.map(renderBlinkBox)}\n        </ul>\n    );\n}\n\nexport default BoxGrid;\n","function StartScreen({ onButtonClick }) {\n    return (\n        <div>\n            <div>Welcome to my Memory Game!</div>\n            <button onClick={onButtonClick}>Click</button>\n        </div>\n    );\n}\n\nexport default StartScreen;\n","import { useState } from \"react\";\nimport BoxGrid from \"./BoxGrid\";\nimport StartScreen from \"./StartScreen\";\n\nfunction GameScreen() {\n    let [showBoard, setShowBoard] = useState(false);\n    let [playingPattern, setPlayingPattern] = useState(false);\n    let [currentPatternIdx, setCurrentPatternIdx] = useState(0);\n    let [currentPattern, setCurrentPattern] = useState([1, 2, 3, 4, 5, 6]);\n    let [currentBoardState, setCurrentBoardState] = useState(\n        getGridStatesForSpace(currentPattern[0])\n    );\n\n    function getGridStatesForSpace(currentSpace) {\n        let states = Array(9)\n            .fill(0)\n            .map((a, currentIdx) => {\n                return currentIdx === currentSpace ? true : false;\n            });\n        return states;\n    }\n\n    function executeNextButtonClick() {\n        let boxesAreClickable = Array(9).fill(false);\n        setCurrentBoardState(\n            getGridStatesForSpace(currentPattern[currentPatternIdx])\n        );\n        console.log(currentBoardState);\n\n        setCurrentPatternIdx(currentPatternIdx + 1);\n    }\n\n    function showGameBoard() {\n        let boxesAreClickable = Array(9).fill(false);\n\n        return (\n            <div>\n                <BoxGrid\n                    boxesAreClickable={boxesAreClickable}\n                    initialStates={currentBoardState}\n                />\n                <button onClick={executeNextButtonClick}>See Next One!</button>\n            </div>\n        );\n    }\n\n    function switchToGameBoard() {\n        setShowBoard(true);\n    }\n\n    function showStartScreen() {\n        return <StartScreen onButtonClick={switchToGameBoard} />;\n    }\n\n    return (\n        <div className=\"flex\">\n            {showBoard ? showGameBoard() : showStartScreen()}\n        </div>\n    );\n}\n\nexport default GameScreen;\n","import BoxGrid from \"./components/BoxGrid\";\nimport GameScreen from \"./components/GameScreen\";\n\nfunction App() {\n    return <GameScreen />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}